{"ast":null,"code":"var _jsxFileName = \"/home/chemin/projects/exoReact/exo10/src/components/VideoForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n\n// function VideoForm({ onAddVideo, existingVideos }) {\n//   const [videoData, setVideoData] = useState({\n//     title: '',\n//     type: '',\n//     releaseYear: '',\n//     director: '',\n//     genre: '',\n//     duration: '',\n//     actors: '',\n//     watched: false,\n//   });\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setVideoData({ ...videoData, [name]: value });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     const exists = existingVideos.some(\n//       (video) =>\n//         video.title === videoData.title &&\n//         video.releaseYear === videoData.releaseYear &&\n//         video.director === videoData.director\n//     );\n//     if (!exists) {\n//       onAddVideo({ ...videoData, actors: videoData.actors.split(',') });\n//       setVideoData({\n//         title: '',\n//         type: '',\n//         releaseYear: '',\n//         director: '',\n//         genre: '',\n//         duration: '',\n//         actors: '',\n//         watched: false,\n//       });\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <input\n//         type=\"text\"\n//         name=\"title\"\n//         placeholder=\"Titre\"\n//         value={videoData.title}\n//         onChange={handleChange}\n//         required\n//       />\n//       <input\n//         type=\"text\"\n//         name=\"type\"\n//         placeholder=\"Type (film, dessin animé, etc.)\"\n//         value={videoData.type}\n//         onChange={handleChange}\n//         required\n//       />\n//       <input\n//         type=\"text\"\n//         name=\"releaseYear\"\n//         placeholder=\"Année de sortie\"\n//         value={videoData.releaseYear}\n//         onChange={handleChange}\n//         required\n//       />\n//       <input\n//         type=\"text\"\n//         name=\"director\"\n//         placeholder=\"Réalisateur\"\n//         value={videoData.director}\n//         onChange={handleChange}\n//         required\n//       />\n//       <input\n//         type=\"text\"\n//         name=\"genre\"\n//         placeholder=\"Genre\"\n//         value={videoData.genre}\n//         onChange={handleChange}\n//         required\n//       />\n//       <input\n//         type=\"number\"\n//         name=\"duration\"\n//         placeholder=\"Durée (en minutes)\"\n//         value={videoData.duration}\n//         onChange={handleChange}\n//         required\n//       />\n//       <input\n//         type=\"text\"\n//         name=\"actors\"\n//         placeholder=\"Liste d'acteurs principaux (séparés par des virgules)\"\n//         value={videoData.actors}\n//         onChange={handleChange}\n//         required\n//       />\n//       <label>\n//         Vu:\n//         <input\n//           type=\"checkbox\"\n//           name=\"watched\"\n//           checked={videoData.watched}\n//           onChange={handleChange}\n//         />\n//       </label>\n//       <button type=\"submit\">Ajouter</button>\n//     </form>\n//   );\n// }\n\n// export default VideoForm;\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VideoForm({\n  onAddVideo,\n  existingVideos\n}) {\n  _s();\n  const [video, setVideo] = useState({\n    title: '',\n    type: '',\n    releaseYear: '',\n    director: '',\n    genre: '',\n    duration: '',\n    actors: '',\n    watched: false\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setVideo({\n      ...video,\n      [name]: value\n    });\n  };\n  const handleAddVideo = () => {\n    // Vérifier si une vidéo avec le même titre existe déjà\n    const isDuplicate = existingVideos.some(v => v.title === video.title);\n    if (!isDuplicate) {\n      onAddVideo(video);\n      // Réinitialiser le formulaire\n      setVideo({\n        title: '',\n        type: '',\n        releaseYear: '',\n        director: '',\n        genre: '',\n        duration: '',\n        actors: '',\n        watched: false\n      });\n    } else {\n      alert('Une vidéo avec le même titre existe déjà.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Ajouter/Modifier une vid\\xE9o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Titre:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: video.title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Type:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"type\",\n        value: video.type,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Ann\\xE9e de sortie:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"releaseYear\",\n        value: video.releaseYear,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"R\\xE9alisateur:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"director\",\n        value: video.director,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Genre:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"genre\",\n        value: video.genre,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Dur\\xE9e (minutes):\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"duration\",\n        value: video.duration,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Acteurs principaux (s\\xE9par\\xE9s par des virgules):\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"actors\",\n        value: video.actors,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Vu:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"watched\",\n        checked: video.watched,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddVideo,\n      children: \"Ajouter/Modifier\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoForm, \"XYfjE83b24u80/3Z8W5CYaoUHXo=\");\n_c = VideoForm;\nexport default VideoForm;\nvar _c;\n$RefreshReg$(_c, \"VideoForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","VideoForm","onAddVideo","existingVideos","_s","video","setVideo","title","type","releaseYear","director","genre","duration","actors","watched","handleChange","e","name","value","target","handleAddVideo","isDuplicate","some","v","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","checked","onClick","_c","$RefreshReg$"],"sources":["/home/chemin/projects/exoReact/exo10/src/components/VideoForm.js"],"sourcesContent":["// import React, { useState } from 'react';\n\n// function VideoForm({ onAddVideo, existingVideos }) {\n//   const [videoData, setVideoData] = useState({\n//     title: '',\n//     type: '',\n//     releaseYear: '',\n//     director: '',\n//     genre: '',\n//     duration: '',\n//     actors: '',\n//     watched: false,\n//   });\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setVideoData({ ...videoData, [name]: value });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     const exists = existingVideos.some(\n//       (video) =>\n//         video.title === videoData.title &&\n//         video.releaseYear === videoData.releaseYear &&\n//         video.director === videoData.director\n//     );\n//     if (!exists) {\n//       onAddVideo({ ...videoData, actors: videoData.actors.split(',') });\n//       setVideoData({\n//         title: '',\n//         type: '',\n//         releaseYear: '',\n//         director: '',\n//         genre: '',\n//         duration: '',\n//         actors: '',\n//         watched: false,\n//       });\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <input\n//         type=\"text\"\n//         name=\"title\"\n//         placeholder=\"Titre\"\n//         value={videoData.title}\n//         onChange={handleChange}\n//         required\n//       />\n//       <input\n//         type=\"text\"\n//         name=\"type\"\n//         placeholder=\"Type (film, dessin animé, etc.)\"\n//         value={videoData.type}\n//         onChange={handleChange}\n//         required\n//       />\n//       <input\n//         type=\"text\"\n//         name=\"releaseYear\"\n//         placeholder=\"Année de sortie\"\n//         value={videoData.releaseYear}\n//         onChange={handleChange}\n//         required\n//       />\n//       <input\n//         type=\"text\"\n//         name=\"director\"\n//         placeholder=\"Réalisateur\"\n//         value={videoData.director}\n//         onChange={handleChange}\n//         required\n//       />\n//       <input\n//         type=\"text\"\n//         name=\"genre\"\n//         placeholder=\"Genre\"\n//         value={videoData.genre}\n//         onChange={handleChange}\n//         required\n//       />\n//       <input\n//         type=\"number\"\n//         name=\"duration\"\n//         placeholder=\"Durée (en minutes)\"\n//         value={videoData.duration}\n//         onChange={handleChange}\n//         required\n//       />\n//       <input\n//         type=\"text\"\n//         name=\"actors\"\n//         placeholder=\"Liste d'acteurs principaux (séparés par des virgules)\"\n//         value={videoData.actors}\n//         onChange={handleChange}\n//         required\n//       />\n//       <label>\n//         Vu:\n//         <input\n//           type=\"checkbox\"\n//           name=\"watched\"\n//           checked={videoData.watched}\n//           onChange={handleChange}\n//         />\n//       </label>\n//       <button type=\"submit\">Ajouter</button>\n//     </form>\n//   );\n// }\n\n// export default VideoForm;\n\nimport React, { useState } from 'react';\n\nfunction VideoForm({ onAddVideo, existingVideos }) {\n  const [video, setVideo] = useState({\n    title: '',\n    type: '',\n    releaseYear: '',\n    director: '',\n    genre: '',\n    duration: '',\n    actors: '',\n    watched: false,\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setVideo({\n      ...video,\n      [name]: value,\n    });\n  };\n\n  const handleAddVideo = () => {\n    // Vérifier si une vidéo avec le même titre existe déjà\n    const isDuplicate = existingVideos.some((v) => v.title === video.title);\n\n    if (!isDuplicate) {\n      onAddVideo(video);\n      // Réinitialiser le formulaire\n      setVideo({\n        title: '',\n        type: '',\n        releaseYear: '',\n        director: '',\n        genre: '',\n        duration: '',\n        actors: '',\n        watched: false,\n      });\n    } else {\n      alert('Une vidéo avec le même titre existe déjà.');\n    }\n  };\n\n  return (\n    <div className=\"video-form\">\n      <h3>Ajouter/Modifier une vidéo</h3>\n      <label>\n        Titre:\n        <input type=\"text\" name=\"title\" value={video.title} onChange={handleChange} />\n      </label>\n      <label>\n        Type:\n        <input type=\"text\" name=\"type\" value={video.type} onChange={handleChange} />\n      </label>\n      <label>\n        Année de sortie:\n        <input type=\"text\" name=\"releaseYear\" value={video.releaseYear} onChange={handleChange} />\n      </label>\n      <label>\n        Réalisateur:\n        <input type=\"text\" name=\"director\" value={video.director} onChange={handleChange} />\n      </label>\n      <label>\n        Genre:\n        <input type=\"text\" name=\"genre\" value={video.genre} onChange={handleChange} />\n      </label>\n      <label>\n        Durée (minutes):\n        <input type=\"number\" name=\"duration\" value={video.duration} onChange={handleChange} />\n      </label>\n      <label>\n        Acteurs principaux (séparés par des virgules):\n        <input type=\"text\" name=\"actors\" value={video.actors} onChange={handleChange} />\n      </label>\n      <label>\n        Vu:\n        <input type=\"checkbox\" name=\"watched\" checked={video.watched} onChange={handleChange} />\n      </label>\n      <button onClick={handleAddVideo}>Ajouter/Modifier</button>\n    </div>\n  );\n}\n\nexport default VideoForm;\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}